/*
 * This file is generated by jOOQ.
*/
package org.openforis.users.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.openforis.users.jooq.tables.OfUserToken;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfUserTokenRecord extends UpdatableRecordImpl<OfUserTokenRecord> implements Record3<Long, String, Timestamp> {

    private static final long serialVersionUID = 3450451;

    /**
     * Setter for <code>OF_USERS.OF_USER_TOKEN.USER_ID</code>.
     */
    public void setUserId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>OF_USERS.OF_USER_TOKEN.USER_ID</code>.
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>OF_USERS.OF_USER_TOKEN.TOKEN</code>.
     */
    public void setToken(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>OF_USERS.OF_USER_TOKEN.TOKEN</code>.
     */
    public String getToken() {
        return (String) get(1);
    }

    /**
     * Setter for <code>OF_USERS.OF_USER_TOKEN.TOKEN_DATETIME</code>.
     */
    public void setTokenDatetime(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>OF_USERS.OF_USER_TOKEN.TOKEN_DATETIME</code>.
     */
    public Timestamp getTokenDatetime() {
        return (Timestamp) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Long, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, String, Timestamp> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, String, Timestamp> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return OfUserToken.OF_USER_TOKEN.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return OfUserToken.OF_USER_TOKEN.TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return OfUserToken.OF_USER_TOKEN.TOKEN_DATETIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getTokenDatetime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfUserTokenRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfUserTokenRecord value2(String value) {
        setToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfUserTokenRecord value3(Timestamp value) {
        setTokenDatetime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfUserTokenRecord values(Long value1, String value2, Timestamp value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OfUserTokenRecord
     */
    public OfUserTokenRecord() {
        super(OfUserToken.OF_USER_TOKEN);
    }

    /**
     * Create a detached, initialised OfUserTokenRecord
     */
    public OfUserTokenRecord(Long userId, String token, Timestamp tokenDatetime) {
        super(OfUserToken.OF_USER_TOKEN);

        set(0, userId);
        set(1, token);
        set(2, tokenDatetime);
    }
}
