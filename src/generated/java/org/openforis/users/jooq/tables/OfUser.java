/**
 * This class is generated by jOOQ
 */
package org.openforis.users.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.openforis.users.jooq.Keys;
import org.openforis.users.jooq.OfUsers;
import org.openforis.users.jooq.tables.records.OfUserRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfUser extends TableImpl<OfUserRecord> {

	private static final long serialVersionUID = 2129282960;

	/**
	 * The reference instance of <code>OF_USERS.OF_USER</code>
	 */
	public static final OfUser OF_USER = new OfUser();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<OfUserRecord> getRecordType() {
		return OfUserRecord.class;
	}

	/**
	 * The column <code>OF_USERS.OF_USER.ID</code>.
	 */
	public final TableField<OfUserRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>OF_USERS.OF_USER.USERNAME</code>.
	 */
	public final TableField<OfUserRecord, String> USERNAME = createField("USERNAME", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>OF_USERS.OF_USER.PASSWORD</code>.
	 */
	public final TableField<OfUserRecord, String> PASSWORD = createField("PASSWORD", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>OF_USERS.OF_USER.ENABLED</code>.
	 */
	public final TableField<OfUserRecord, Boolean> ENABLED = createField("ENABLED", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * Create a <code>OF_USERS.OF_USER</code> table reference
	 */
	public OfUser() {
		this("OF_USER", null);
	}

	/**
	 * Create an aliased <code>OF_USERS.OF_USER</code> table reference
	 */
	public OfUser(String alias) {
		this(alias, OF_USER);
	}

	private OfUser(String alias, Table<OfUserRecord> aliased) {
		this(alias, aliased, null);
	}

	private OfUser(String alias, Table<OfUserRecord> aliased, Field<?>[] parameters) {
		super(alias, OfUsers.OF_USERS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<OfUserRecord, Long> getIdentity() {
		return Keys.IDENTITY_OF_USER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<OfUserRecord> getPrimaryKey() {
		return Keys.PK_OF_USER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<OfUserRecord>> getKeys() {
		return Arrays.<UniqueKey<OfUserRecord>>asList(Keys.PK_OF_USER, Keys.UNIQUE_USERNAME);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OfUser as(String alias) {
		return new OfUser(alias, this);
	}

	/**
	 * Rename this table
	 */
	public OfUser rename(String name) {
		return new OfUser(name, null);
	}
}
