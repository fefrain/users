/*
 * This file is generated by jOOQ.
*/
package org.openforis.users.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.openforis.users.jooq.Keys;
import org.openforis.users.jooq.OfUsers;
import org.openforis.users.jooq.tables.records.OfUserTokenRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfUserToken extends TableImpl<OfUserTokenRecord> {

    private static final long serialVersionUID = -1229104196;

    /**
     * The reference instance of <code>OF_USERS.OF_USER_TOKEN</code>
     */
    public static final OfUserToken OF_USER_TOKEN = new OfUserToken();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OfUserTokenRecord> getRecordType() {
        return OfUserTokenRecord.class;
    }

    /**
     * The column <code>OF_USERS.OF_USER_TOKEN.USER_ID</code>.
     */
    public final TableField<OfUserTokenRecord, Long> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>OF_USERS.OF_USER_TOKEN.TOKEN</code>.
     */
    public final TableField<OfUserTokenRecord, String> TOKEN = createField("TOKEN", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>OF_USERS.OF_USER_TOKEN.TOKEN_DATETIME</code>.
     */
    public final TableField<OfUserTokenRecord, Timestamp> TOKEN_DATETIME = createField("TOKEN_DATETIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>OF_USERS.OF_USER_TOKEN</code> table reference
     */
    public OfUserToken() {
        this("OF_USER_TOKEN", null);
    }

    /**
     * Create an aliased <code>OF_USERS.OF_USER_TOKEN</code> table reference
     */
    public OfUserToken(String alias) {
        this(alias, OF_USER_TOKEN);
    }

    private OfUserToken(String alias, Table<OfUserTokenRecord> aliased) {
        this(alias, aliased, null);
    }

    private OfUserToken(String alias, Table<OfUserTokenRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return OfUsers.OF_USERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OfUserTokenRecord> getPrimaryKey() {
        return Keys.OF_USER_TOKEN_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OfUserTokenRecord>> getKeys() {
        return Arrays.<UniqueKey<OfUserTokenRecord>>asList(Keys.OF_USER_TOKEN_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<OfUserTokenRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OfUserTokenRecord, ?>>asList(Keys.OF_USER_TOKEN_USER_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfUserToken as(String alias) {
        return new OfUserToken(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OfUserToken rename(String name) {
        return new OfUserToken(name, null);
    }
}
