swagger: '2.0'
info:
  title: Of-Users API
  description: ''
  version: "0.0.0"
schemes:
  - http
basePath: /api
produces:
  - application/json
paths:
  /user:
    get:
      tags:
        - User
      parameters:
        - name: username
          in: query
          description: Username of user to find
          type: string
      responses:
        200:
          description: User posted
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - User
      consumes:
        - application/json
      responses:
        200:
          description: List of users found
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /user/{id}:
    get:
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: ID of user to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: ID of user to patch
          required: true
          type: integer
          format: int64
      consumes:
        - application/json
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: ID of user to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /group:
    get:
      tags:
        - Group
      parameters:
        - name: name
          in: query
          description: Name of group to find
          type: string
        - name: enabled
          in: query
          description: TODO
          type: boolean
        - name: systemDefined
          in: query
          description: TODO
          type: boolean
        - name: visibility
          in: query
          description: Visibility of group to find
          type: string
      responses:
        200:
          description: List of groups found
          schema:
            $ref: '#/definitions/Group'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Group
      consumes:
        - application/json
      responses:
        200:
          description: Group posted
          schema:
            $ref: '#/definitions/Group'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /group/{id}:
    get:
      tags:
        - Group
      parameters:
        - name: id
          in: path
          description: ID of group to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: ID of user to patch
          required: true
          type: integer
          format: int64
      consumes:
        - application/json
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: ID of user to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  User:
    type: object
    properties:
      username:
        type: string
        description: Username of the user.
      password:
        type: string
        description: Password of the user.
      enabled:
        type: boolean
        description: If the user is enabled or not
  Group:
    type: object
    properties:
      name:
        type: string
        description: Name of the group.
      label:
        type: string
        description: Label of the group.
      description:
        type: string
        description: Description of the group.
      enabled:
        type: boolean
        description: If the group is enabled or not
      systemDefined:
        type: boolean
        description: TODO
      visibilityCode:
        type: string
        description: TODO
  Error:
    type: object
    properties:
      status:
        type: string
      message:
        type: string
