swagger: '2.0'
info:
  title: Of-Users API
  description: Of-Users API
  version: "0.0.0"
schemes:
  - http
basePath: /api
produces:
  - application/json
paths:
  /login:
    post:
      tags:
        - User Management
      consumes:
        - application/json
      parameters:
        - name: '-'
          in: body
          description: '-'
          schema:
            properties:
              username:
                type: string
                description: Username of the user
              rawPassword:
                type: string
                description: Not-encrypted password of the user
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Result'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Result'
  /change-password:
    post:
      tags:
        - User Management
      consumes:
        - application/json
      parameters:
        - name: '-'
          in: body
          description: '-'
          schema:
            properties:
              username:
                type: string
                description: Username of the user
              newPassword:
                type: string
                description: New password of the user
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Result'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Result'
  /user:
    get:
      tags:
        - User
      parameters:
        - name: username
          in: query
          description: Username of user to find
          type: string
      responses:
        200:
          description: Added user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Result'
    post:
      tags:
        - User
      consumes:
        - application/json
      parameters:
        - name: User
          in: body
          description: '-'
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: Found users
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Result'
  /user/{id}:
    get:
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: ID of user to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Found user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Result'
    patch:
      tags:
        - User
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user to patch
          required: true
          type: integer
          format: int64
        - name: User
          in: body
          description: User to modify
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: Modified user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Result'
    delete:
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: ID of user to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: '-'
          schema:
            $ref: '#/definitions/Result'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Result'
  /group:
    get:
      tags:
        - Group
      parameters:
        - name: name
          in: query
          description: Name of group to find
          type: string
        - name: enabled
          in: query
          description: TODO
          type: boolean
        - name: systemDefined
          in: query
          description: TODO
          type: boolean
        - name: visibility
          in: query
          description: Visibility of group to find
          type: string
      responses:
        200:
          description: Found groups
          schema:
            $ref: '#/definitions/Group'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Result'
    post:
      tags:
        - Group
      consumes:
        - application/json
      parameters:
        - name: Group
          in: body
          description: '-'
          schema:
            $ref: '#/definitions/Group'
      responses:
        200:
          description: Added group
          schema:
            $ref: '#/definitions/Group'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Result'
  /group/{id}:
    get:
      tags:
        - Group
      parameters:
        - name: id
          in: path
          description: ID of group to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Found group
          schema:
            $ref: '#/definitions/Group'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Result'
    patch:
      tags:
        - Group
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of group to patch
          required: true
          type: integer
          format: int64
        - name: Group
          in: body
          description: Group to modify
          schema:
            $ref: '#/definitions/Group'
      responses:
        200:
          description: '-'
          schema:
            $ref: '#/definitions/Group'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Result'
    delete:
      tags:
        - Group
      parameters:
        - name: id
          in: path
          description: ID of group to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: '-'
          schema:
            $ref: '#/definitions/Group'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Result'
  /user/{id}/groups:
    get:
      tags:
        - Group
        - User
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the user of the groups to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: '-'
          schema:
            $ref: '#/definitions/Group'
  /group/{id}/users:
    get:
      tags:
        - User
        - Group
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the group of the users to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: '-'
          schema:
            $ref: '#/definitions/User'
  /group/{groupId}/user/{userId}:
    post:
      tags:
        - UserGroup
      consumes:
        - application/json
      parameters:
        - name: userId
          in: path
          description: User's ID
          required: true
          type: integer
          format: int64
        - name: groupId
          in: path
          description: Group's ID
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: '-'
          schema:
            $ref: '#/definitions/UserGroup'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Result'
    patch:
      tags:
        - UserGroup
      consumes:
        - application/json
      parameters:
        - name: userId
          in: path
          description: User's ID
          required: true
          type: integer
          format: int64
        - name: groupId
          in: path
          description: Group's ID
          required: true
          type: integer
          format: int64
        - name: '-'
          in: body
          description: '-'
          schema:
            properties:
              status:
                type: string
                description: '-'
      responses:
        200:
          description: '-'
          schema:
            $ref: '#/definitions/UserGroup'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Result'
definitions:
  User:
    type: object
    properties:
      username:
        type: string
        description: Username of the user
      password:
        type: string
        description: Password of the user
      enabled:
        type: boolean
        description: If the user is enabled or not
  Group:
    type: object
    properties:
      name:
        type: string
        description: Name of the group
      label:
        type: string
        description: Label of the group
      description:
        type: string
        description: Description of the group
      enabled:
        type: boolean
        description: If the group is enabled or not
      systemDefined:
        type: boolean
        description: TODO
      visibilityCode:
        type: string
        description: TODO
  UserGroup:
    type: object
    properties:
      userId:
        type: integer
        description: User's ID
      groupId:
        type: integer
        description: Group's ID
      statusCode:
        type: string
        description: TODO
      roleCode:
        type: string
        description: TODO
  Result:
    type: object
    properties:
      status:
        type: integer
      code:
        type: string
      message:
        type: string
